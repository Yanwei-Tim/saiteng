// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BVAlarm.proto

#ifndef PROTOBUF_BVAlarm_2eproto__INCLUDED
#define PROTOBUF_BVAlarm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "PUConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace BVCU {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BVAlarm_2eproto();
void protobuf_AssignDesc_BVAlarm_2eproto();
void protobuf_ShutdownFile_BVAlarm_2eproto();

class AlarmSource;
class AlarmContent;
class AlarmAction_Record;
class AlarmAction_AlertOut;
class AlarmAction_Email;
class AlarmAction_Snapshot;
class AlarmAction_SMS;
class AlarmAction_PTZ;
class AlarmAction_AudioOut;
class AlarmAction;
class AlarmLinkAction_Base;
class AlarmLinkAction;

// ===================================================================

class AlarmSource : public ::google::protobuf::Message {
 public:
  AlarmSource();
  virtual ~AlarmSource();
  
  AlarmSource(const AlarmSource& from);
  
  inline AlarmSource& operator=(const AlarmSource& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmSource& default_instance();
  
  void Swap(AlarmSource* other);
  
  // implements Message ----------------------------------------------
  
  AlarmSource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmSource& from);
  void MergeFrom(const AlarmSource& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 iSource = 1;
  inline bool has_isource() const;
  inline void clear_isource();
  static const int kISourceFieldNumber = 1;
  inline ::google::protobuf::uint32 isource() const;
  inline void set_isource(::google::protobuf::uint32 value);
  
  // optional uint32 iType = 2;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 2;
  inline ::google::protobuf::uint32 itype() const;
  inline void set_itype(::google::protobuf::uint32 value);
  
  // optional uint32 iValue = 3;
  inline bool has_ivalue() const;
  inline void clear_ivalue();
  static const int kIValueFieldNumber = 3;
  inline ::google::protobuf::uint32 ivalue() const;
  inline void set_ivalue(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmSource)
 private:
  inline void set_has_isource();
  inline void clear_has_isource();
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_ivalue();
  inline void clear_has_ivalue();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 isource_;
  ::google::protobuf::uint32 itype_;
  ::google::protobuf::uint32 ivalue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmSource* default_instance_;
};
// -------------------------------------------------------------------

class AlarmContent : public ::google::protobuf::Message {
 public:
  AlarmContent();
  virtual ~AlarmContent();
  
  AlarmContent(const AlarmContent& from);
  
  inline AlarmContent& operator=(const AlarmContent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmContent& default_instance();
  
  void Swap(AlarmContent* other);
  
  // implements Message ----------------------------------------------
  
  AlarmContent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmContent& from);
  void MergeFrom(const AlarmContent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .BVCU.AlarmSource stSource = 1;
  inline bool has_stsource() const;
  inline void clear_stsource();
  static const int kStSourceFieldNumber = 1;
  inline const ::BVCU::AlarmSource& stsource() const;
  inline ::BVCU::AlarmSource* mutable_stsource();
  inline ::BVCU::AlarmSource* release_stsource();
  
  // optional .BVCU.PUConfig.WallTime stTime = 2;
  inline bool has_sttime() const;
  inline void clear_sttime();
  static const int kStTimeFieldNumber = 2;
  inline const ::BVCU::PUConfig::WallTime& sttime() const;
  inline ::BVCU::PUConfig::WallTime* mutable_sttime();
  inline ::BVCU::PUConfig::WallTime* release_sttime();
  
  // optional bytes pContentData = 3;
  inline bool has_pcontentdata() const;
  inline void clear_pcontentdata();
  static const int kPContentDataFieldNumber = 3;
  inline const ::std::string& pcontentdata() const;
  inline void set_pcontentdata(const ::std::string& value);
  inline void set_pcontentdata(const char* value);
  inline void set_pcontentdata(const void* value, size_t size);
  inline ::std::string* mutable_pcontentdata();
  inline ::std::string* release_pcontentdata();
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmContent)
 private:
  inline void set_has_stsource();
  inline void clear_has_stsource();
  inline void set_has_sttime();
  inline void clear_has_sttime();
  inline void set_has_pcontentdata();
  inline void clear_has_pcontentdata();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::BVCU::AlarmSource* stsource_;
  ::BVCU::PUConfig::WallTime* sttime_;
  ::std::string* pcontentdata_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmContent* default_instance_;
};
// -------------------------------------------------------------------

class AlarmAction_Record : public ::google::protobuf::Message {
 public:
  AlarmAction_Record();
  virtual ~AlarmAction_Record();
  
  AlarmAction_Record(const AlarmAction_Record& from);
  
  inline AlarmAction_Record& operator=(const AlarmAction_Record& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmAction_Record& default_instance();
  
  void Swap(AlarmAction_Record* other);
  
  // implements Message ----------------------------------------------
  
  AlarmAction_Record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmAction_Record& from);
  void MergeFrom(const AlarmAction_Record& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 iIndex = 1;
  inline bool has_iindex() const;
  inline void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 iindex() const;
  inline void set_iindex(::google::protobuf::uint32 value);
  
  // optional uint32 iPreRecord = 2;
  inline bool has_iprerecord() const;
  inline void clear_iprerecord();
  static const int kIPreRecordFieldNumber = 2;
  inline ::google::protobuf::uint32 iprerecord() const;
  inline void set_iprerecord(::google::protobuf::uint32 value);
  
  // optional uint32 iPostRecord = 3;
  inline bool has_ipostrecord() const;
  inline void clear_ipostrecord();
  static const int kIPostRecordFieldNumber = 3;
  inline ::google::protobuf::uint32 ipostrecord() const;
  inline void set_ipostrecord(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmAction_Record)
 private:
  inline void set_has_iindex();
  inline void clear_has_iindex();
  inline void set_has_iprerecord();
  inline void clear_has_iprerecord();
  inline void set_has_ipostrecord();
  inline void clear_has_ipostrecord();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 iindex_;
  ::google::protobuf::uint32 iprerecord_;
  ::google::protobuf::uint32 ipostrecord_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmAction_Record* default_instance_;
};
// -------------------------------------------------------------------

class AlarmAction_AlertOut : public ::google::protobuf::Message {
 public:
  AlarmAction_AlertOut();
  virtual ~AlarmAction_AlertOut();
  
  AlarmAction_AlertOut(const AlarmAction_AlertOut& from);
  
  inline AlarmAction_AlertOut& operator=(const AlarmAction_AlertOut& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmAction_AlertOut& default_instance();
  
  void Swap(AlarmAction_AlertOut* other);
  
  // implements Message ----------------------------------------------
  
  AlarmAction_AlertOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmAction_AlertOut& from);
  void MergeFrom(const AlarmAction_AlertOut& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 iIndex = 1;
  inline bool has_iindex() const;
  inline void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 iindex() const;
  inline void set_iindex(::google::protobuf::uint32 value);
  
  // optional uint32 bAction = 2;
  inline bool has_baction() const;
  inline void clear_baction();
  static const int kBActionFieldNumber = 2;
  inline ::google::protobuf::uint32 baction() const;
  inline void set_baction(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmAction_AlertOut)
 private:
  inline void set_has_iindex();
  inline void clear_has_iindex();
  inline void set_has_baction();
  inline void clear_has_baction();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 iindex_;
  ::google::protobuf::uint32 baction_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmAction_AlertOut* default_instance_;
};
// -------------------------------------------------------------------

class AlarmAction_Email : public ::google::protobuf::Message {
 public:
  AlarmAction_Email();
  virtual ~AlarmAction_Email();
  
  AlarmAction_Email(const AlarmAction_Email& from);
  
  inline AlarmAction_Email& operator=(const AlarmAction_Email& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmAction_Email& default_instance();
  
  void Swap(AlarmAction_Email* other);
  
  // implements Message ----------------------------------------------
  
  AlarmAction_Email* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmAction_Email& from);
  void MergeFrom(const AlarmAction_Email& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string szReceiverAddr = 1;
  inline bool has_szreceiveraddr() const;
  inline void clear_szreceiveraddr();
  static const int kSzReceiverAddrFieldNumber = 1;
  inline const ::std::string& szreceiveraddr() const;
  inline void set_szreceiveraddr(const ::std::string& value);
  inline void set_szreceiveraddr(const char* value);
  inline void set_szreceiveraddr(const char* value, size_t size);
  inline ::std::string* mutable_szreceiveraddr();
  inline ::std::string* release_szreceiveraddr();
  
  // optional string sCcAddr = 2;
  inline bool has_sccaddr() const;
  inline void clear_sccaddr();
  static const int kSCcAddrFieldNumber = 2;
  inline const ::std::string& sccaddr() const;
  inline void set_sccaddr(const ::std::string& value);
  inline void set_sccaddr(const char* value);
  inline void set_sccaddr(const char* value, size_t size);
  inline ::std::string* mutable_sccaddr();
  inline ::std::string* release_sccaddr();
  
  // optional string sBccAddr = 3;
  inline bool has_sbccaddr() const;
  inline void clear_sbccaddr();
  static const int kSBccAddrFieldNumber = 3;
  inline const ::std::string& sbccaddr() const;
  inline void set_sbccaddr(const ::std::string& value);
  inline void set_sbccaddr(const char* value);
  inline void set_sbccaddr(const char* value, size_t size);
  inline ::std::string* mutable_sbccaddr();
  inline ::std::string* release_sbccaddr();
  
  // optional string szTitle = 4;
  inline bool has_sztitle() const;
  inline void clear_sztitle();
  static const int kSzTitleFieldNumber = 4;
  inline const ::std::string& sztitle() const;
  inline void set_sztitle(const ::std::string& value);
  inline void set_sztitle(const char* value);
  inline void set_sztitle(const char* value, size_t size);
  inline ::std::string* mutable_sztitle();
  inline ::std::string* release_sztitle();
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmAction_Email)
 private:
  inline void set_has_szreceiveraddr();
  inline void clear_has_szreceiveraddr();
  inline void set_has_sccaddr();
  inline void clear_has_sccaddr();
  inline void set_has_sbccaddr();
  inline void clear_has_sbccaddr();
  inline void set_has_sztitle();
  inline void clear_has_sztitle();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* szreceiveraddr_;
  ::std::string* sccaddr_;
  ::std::string* sbccaddr_;
  ::std::string* sztitle_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmAction_Email* default_instance_;
};
// -------------------------------------------------------------------

class AlarmAction_Snapshot : public ::google::protobuf::Message {
 public:
  AlarmAction_Snapshot();
  virtual ~AlarmAction_Snapshot();
  
  AlarmAction_Snapshot(const AlarmAction_Snapshot& from);
  
  inline AlarmAction_Snapshot& operator=(const AlarmAction_Snapshot& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmAction_Snapshot& default_instance();
  
  void Swap(AlarmAction_Snapshot* other);
  
  // implements Message ----------------------------------------------
  
  AlarmAction_Snapshot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmAction_Snapshot& from);
  void MergeFrom(const AlarmAction_Snapshot& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 iIndex = 1;
  inline bool has_iindex() const;
  inline void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 iindex() const;
  inline void set_iindex(::google::protobuf::uint32 value);
  
  // optional uint32 iDuration = 2;
  inline bool has_iduration() const;
  inline void clear_iduration();
  static const int kIDurationFieldNumber = 2;
  inline ::google::protobuf::uint32 iduration() const;
  inline void set_iduration(::google::protobuf::uint32 value);
  
  // optional uint32 bLocal = 3;
  inline bool has_blocal() const;
  inline void clear_blocal();
  static const int kBLocalFieldNumber = 3;
  inline ::google::protobuf::uint32 blocal() const;
  inline void set_blocal(::google::protobuf::uint32 value);
  
  // optional uint32 bUpload = 4;
  inline bool has_bupload() const;
  inline void clear_bupload();
  static const int kBUploadFieldNumber = 4;
  inline ::google::protobuf::uint32 bupload() const;
  inline void set_bupload(::google::protobuf::uint32 value);
  
  // optional uint32 bEmail = 5;
  inline bool has_bemail() const;
  inline void clear_bemail();
  static const int kBEmailFieldNumber = 5;
  inline ::google::protobuf::uint32 bemail() const;
  inline void set_bemail(::google::protobuf::uint32 value);
  
  // repeated string ppszNRUID = 6;
  inline int ppsznruid_size() const;
  inline void clear_ppsznruid();
  static const int kPpszNRUIDFieldNumber = 6;
  inline const ::std::string& ppsznruid(int index) const;
  inline ::std::string* mutable_ppsznruid(int index);
  inline void set_ppsznruid(int index, const ::std::string& value);
  inline void set_ppsznruid(int index, const char* value);
  inline void set_ppsznruid(int index, const char* value, size_t size);
  inline ::std::string* add_ppsznruid();
  inline void add_ppsznruid(const ::std::string& value);
  inline void add_ppsznruid(const char* value);
  inline void add_ppsznruid(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& ppsznruid() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ppsznruid();
  
  // optional .BVCU.AlarmAction_Email stEmail = 7;
  inline bool has_stemail() const;
  inline void clear_stemail();
  static const int kStEmailFieldNumber = 7;
  inline const ::BVCU::AlarmAction_Email& stemail() const;
  inline ::BVCU::AlarmAction_Email* mutable_stemail();
  inline ::BVCU::AlarmAction_Email* release_stemail();
  
  // optional uint32 bAttach = 8;
  inline bool has_battach() const;
  inline void clear_battach();
  static const int kBAttachFieldNumber = 8;
  inline ::google::protobuf::uint32 battach() const;
  inline void set_battach(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmAction_Snapshot)
 private:
  inline void set_has_iindex();
  inline void clear_has_iindex();
  inline void set_has_iduration();
  inline void clear_has_iduration();
  inline void set_has_blocal();
  inline void clear_has_blocal();
  inline void set_has_bupload();
  inline void clear_has_bupload();
  inline void set_has_bemail();
  inline void clear_has_bemail();
  inline void set_has_stemail();
  inline void clear_has_stemail();
  inline void set_has_battach();
  inline void clear_has_battach();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 iindex_;
  ::google::protobuf::uint32 iduration_;
  ::google::protobuf::uint32 blocal_;
  ::google::protobuf::uint32 bupload_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ppsznruid_;
  ::google::protobuf::uint32 bemail_;
  ::google::protobuf::uint32 battach_;
  ::BVCU::AlarmAction_Email* stemail_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmAction_Snapshot* default_instance_;
};
// -------------------------------------------------------------------

class AlarmAction_SMS : public ::google::protobuf::Message {
 public:
  AlarmAction_SMS();
  virtual ~AlarmAction_SMS();
  
  AlarmAction_SMS(const AlarmAction_SMS& from);
  
  inline AlarmAction_SMS& operator=(const AlarmAction_SMS& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmAction_SMS& default_instance();
  
  void Swap(AlarmAction_SMS* other);
  
  // implements Message ----------------------------------------------
  
  AlarmAction_SMS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmAction_SMS& from);
  void MergeFrom(const AlarmAction_SMS& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string szCardNum = 1;
  inline bool has_szcardnum() const;
  inline void clear_szcardnum();
  static const int kSzCardNumFieldNumber = 1;
  inline const ::std::string& szcardnum() const;
  inline void set_szcardnum(const ::std::string& value);
  inline void set_szcardnum(const char* value);
  inline void set_szcardnum(const char* value, size_t size);
  inline ::std::string* mutable_szcardnum();
  inline ::std::string* release_szcardnum();
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmAction_SMS)
 private:
  inline void set_has_szcardnum();
  inline void clear_has_szcardnum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* szcardnum_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmAction_SMS* default_instance_;
};
// -------------------------------------------------------------------

class AlarmAction_PTZ : public ::google::protobuf::Message {
 public:
  AlarmAction_PTZ();
  virtual ~AlarmAction_PTZ();
  
  AlarmAction_PTZ(const AlarmAction_PTZ& from);
  
  inline AlarmAction_PTZ& operator=(const AlarmAction_PTZ& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmAction_PTZ& default_instance();
  
  void Swap(AlarmAction_PTZ* other);
  
  // implements Message ----------------------------------------------
  
  AlarmAction_PTZ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmAction_PTZ& from);
  void MergeFrom(const AlarmAction_PTZ& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 iIndex = 1;
  inline bool has_iindex() const;
  inline void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 iindex() const;
  inline void set_iindex(::google::protobuf::uint32 value);
  
  // optional uint32 iCommand = 2;
  inline bool has_icommand() const;
  inline void clear_icommand();
  static const int kICommandFieldNumber = 2;
  inline ::google::protobuf::uint32 icommand() const;
  inline void set_icommand(::google::protobuf::uint32 value);
  
  // optional uint32 iParam = 3;
  inline bool has_iparam() const;
  inline void clear_iparam();
  static const int kIParamFieldNumber = 3;
  inline ::google::protobuf::uint32 iparam() const;
  inline void set_iparam(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmAction_PTZ)
 private:
  inline void set_has_iindex();
  inline void clear_has_iindex();
  inline void set_has_icommand();
  inline void clear_has_icommand();
  inline void set_has_iparam();
  inline void clear_has_iparam();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 iindex_;
  ::google::protobuf::uint32 icommand_;
  ::google::protobuf::uint32 iparam_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmAction_PTZ* default_instance_;
};
// -------------------------------------------------------------------

class AlarmAction_AudioOut : public ::google::protobuf::Message {
 public:
  AlarmAction_AudioOut();
  virtual ~AlarmAction_AudioOut();
  
  AlarmAction_AudioOut(const AlarmAction_AudioOut& from);
  
  inline AlarmAction_AudioOut& operator=(const AlarmAction_AudioOut& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmAction_AudioOut& default_instance();
  
  void Swap(AlarmAction_AudioOut* other);
  
  // implements Message ----------------------------------------------
  
  AlarmAction_AudioOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmAction_AudioOut& from);
  void MergeFrom(const AlarmAction_AudioOut& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 iIndex = 1;
  inline bool has_iindex() const;
  inline void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 iindex() const;
  inline void set_iindex(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmAction_AudioOut)
 private:
  inline void set_has_iindex();
  inline void clear_has_iindex();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 iindex_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmAction_AudioOut* default_instance_;
};
// -------------------------------------------------------------------

class AlarmAction : public ::google::protobuf::Message {
 public:
  AlarmAction();
  virtual ~AlarmAction();
  
  AlarmAction(const AlarmAction& from);
  
  inline AlarmAction& operator=(const AlarmAction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmAction& default_instance();
  
  void Swap(AlarmAction* other);
  
  // implements Message ----------------------------------------------
  
  AlarmAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmAction& from);
  void MergeFrom(const AlarmAction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 iAction = 1;
  inline bool has_iaction() const;
  inline void clear_iaction();
  static const int kIActionFieldNumber = 1;
  inline ::google::protobuf::uint32 iaction() const;
  inline void set_iaction(::google::protobuf::uint32 value);
  
  // optional uint32 iCount = 2;
  inline bool has_icount() const;
  inline void clear_icount();
  static const int kICountFieldNumber = 2;
  inline ::google::protobuf::uint32 icount() const;
  inline void set_icount(::google::protobuf::uint32 value);
  
  // optional uint32 iDelay = 3;
  inline bool has_idelay() const;
  inline void clear_idelay();
  static const int kIDelayFieldNumber = 3;
  inline ::google::protobuf::uint32 idelay() const;
  inline void set_idelay(::google::protobuf::uint32 value);
  
  // optional uint32 iInterval = 4;
  inline bool has_iinterval() const;
  inline void clear_iinterval();
  static const int kIIntervalFieldNumber = 4;
  inline ::google::protobuf::uint32 iinterval() const;
  inline void set_iinterval(::google::protobuf::uint32 value);
  
  // optional .BVCU.AlarmAction_Record stRecord = 5;
  inline bool has_strecord() const;
  inline void clear_strecord();
  static const int kStRecordFieldNumber = 5;
  inline const ::BVCU::AlarmAction_Record& strecord() const;
  inline ::BVCU::AlarmAction_Record* mutable_strecord();
  inline ::BVCU::AlarmAction_Record* release_strecord();
  
  // optional .BVCU.AlarmAction_AlertOut stAlertOut = 6;
  inline bool has_stalertout() const;
  inline void clear_stalertout();
  static const int kStAlertOutFieldNumber = 6;
  inline const ::BVCU::AlarmAction_AlertOut& stalertout() const;
  inline ::BVCU::AlarmAction_AlertOut* mutable_stalertout();
  inline ::BVCU::AlarmAction_AlertOut* release_stalertout();
  
  // optional .BVCU.AlarmAction_Snapshot stSnapshot = 7;
  inline bool has_stsnapshot() const;
  inline void clear_stsnapshot();
  static const int kStSnapshotFieldNumber = 7;
  inline const ::BVCU::AlarmAction_Snapshot& stsnapshot() const;
  inline ::BVCU::AlarmAction_Snapshot* mutable_stsnapshot();
  inline ::BVCU::AlarmAction_Snapshot* release_stsnapshot();
  
  // optional .BVCU.AlarmAction_SMS stSMS = 8;
  inline bool has_stsms() const;
  inline void clear_stsms();
  static const int kStSMSFieldNumber = 8;
  inline const ::BVCU::AlarmAction_SMS& stsms() const;
  inline ::BVCU::AlarmAction_SMS* mutable_stsms();
  inline ::BVCU::AlarmAction_SMS* release_stsms();
  
  // optional .BVCU.AlarmAction_PTZ stPTZ = 9;
  inline bool has_stptz() const;
  inline void clear_stptz();
  static const int kStPTZFieldNumber = 9;
  inline const ::BVCU::AlarmAction_PTZ& stptz() const;
  inline ::BVCU::AlarmAction_PTZ* mutable_stptz();
  inline ::BVCU::AlarmAction_PTZ* release_stptz();
  
  // optional .BVCU.AlarmAction_AudioOut stAudioOut = 10;
  inline bool has_staudioout() const;
  inline void clear_staudioout();
  static const int kStAudioOutFieldNumber = 10;
  inline const ::BVCU::AlarmAction_AudioOut& staudioout() const;
  inline ::BVCU::AlarmAction_AudioOut* mutable_staudioout();
  inline ::BVCU::AlarmAction_AudioOut* release_staudioout();
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmAction)
 private:
  inline void set_has_iaction();
  inline void clear_has_iaction();
  inline void set_has_icount();
  inline void clear_has_icount();
  inline void set_has_idelay();
  inline void clear_has_idelay();
  inline void set_has_iinterval();
  inline void clear_has_iinterval();
  inline void set_has_strecord();
  inline void clear_has_strecord();
  inline void set_has_stalertout();
  inline void clear_has_stalertout();
  inline void set_has_stsnapshot();
  inline void clear_has_stsnapshot();
  inline void set_has_stsms();
  inline void clear_has_stsms();
  inline void set_has_stptz();
  inline void clear_has_stptz();
  inline void set_has_staudioout();
  inline void clear_has_staudioout();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 iaction_;
  ::google::protobuf::uint32 icount_;
  ::google::protobuf::uint32 idelay_;
  ::google::protobuf::uint32 iinterval_;
  ::BVCU::AlarmAction_Record* strecord_;
  ::BVCU::AlarmAction_AlertOut* stalertout_;
  ::BVCU::AlarmAction_Snapshot* stsnapshot_;
  ::BVCU::AlarmAction_SMS* stsms_;
  ::BVCU::AlarmAction_PTZ* stptz_;
  ::BVCU::AlarmAction_AudioOut* staudioout_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmAction* default_instance_;
};
// -------------------------------------------------------------------

class AlarmLinkAction_Base : public ::google::protobuf::Message {
 public:
  AlarmLinkAction_Base();
  virtual ~AlarmLinkAction_Base();
  
  AlarmLinkAction_Base(const AlarmLinkAction_Base& from);
  
  inline AlarmLinkAction_Base& operator=(const AlarmLinkAction_Base& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmLinkAction_Base& default_instance();
  
  void Swap(AlarmLinkAction_Base* other);
  
  // implements Message ----------------------------------------------
  
  AlarmLinkAction_Base* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmLinkAction_Base& from);
  void MergeFrom(const AlarmLinkAction_Base& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string szName = 1;
  inline bool has_szname() const;
  inline void clear_szname();
  static const int kSzNameFieldNumber = 1;
  inline const ::std::string& szname() const;
  inline void set_szname(const ::std::string& value);
  inline void set_szname(const char* value);
  inline void set_szname(const char* value, size_t size);
  inline ::std::string* mutable_szname();
  inline ::std::string* release_szname();
  
  // optional uint32 bEnable = 2;
  inline bool has_benable() const;
  inline void clear_benable();
  static const int kBEnableFieldNumber = 2;
  inline ::google::protobuf::uint32 benable() const;
  inline void set_benable(::google::protobuf::uint32 value);
  
  // optional uint32 bInAction = 3;
  inline bool has_binaction() const;
  inline void clear_binaction();
  static const int kBInActionFieldNumber = 3;
  inline ::google::protobuf::uint32 binaction() const;
  inline void set_binaction(::google::protobuf::uint32 value);
  
  // optional .BVCU.PUConfig.WallTime stBegin = 4;
  inline bool has_stbegin() const;
  inline void clear_stbegin();
  static const int kStBeginFieldNumber = 4;
  inline const ::BVCU::PUConfig::WallTime& stbegin() const;
  inline ::BVCU::PUConfig::WallTime* mutable_stbegin();
  inline ::BVCU::PUConfig::WallTime* release_stbegin();
  
  // optional .BVCU.PUConfig.WallTime stEnd = 5;
  inline bool has_stend() const;
  inline void clear_stend();
  static const int kStEndFieldNumber = 5;
  inline const ::BVCU::PUConfig::WallTime& stend() const;
  inline ::BVCU::PUConfig::WallTime* mutable_stend();
  inline ::BVCU::PUConfig::WallTime* release_stend();
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmLinkAction_Base)
 private:
  inline void set_has_szname();
  inline void clear_has_szname();
  inline void set_has_benable();
  inline void clear_has_benable();
  inline void set_has_binaction();
  inline void clear_has_binaction();
  inline void set_has_stbegin();
  inline void clear_has_stbegin();
  inline void set_has_stend();
  inline void clear_has_stend();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* szname_;
  ::google::protobuf::uint32 benable_;
  ::google::protobuf::uint32 binaction_;
  ::BVCU::PUConfig::WallTime* stbegin_;
  ::BVCU::PUConfig::WallTime* stend_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmLinkAction_Base* default_instance_;
};
// -------------------------------------------------------------------

class AlarmLinkAction : public ::google::protobuf::Message {
 public:
  AlarmLinkAction();
  virtual ~AlarmLinkAction();
  
  AlarmLinkAction(const AlarmLinkAction& from);
  
  inline AlarmLinkAction& operator=(const AlarmLinkAction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmLinkAction& default_instance();
  
  void Swap(AlarmLinkAction* other);
  
  // implements Message ----------------------------------------------
  
  AlarmLinkAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmLinkAction& from);
  void MergeFrom(const AlarmLinkAction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .BVCU.AlarmLinkAction_Base stBase = 1;
  inline bool has_stbase() const;
  inline void clear_stbase();
  static const int kStBaseFieldNumber = 1;
  inline const ::BVCU::AlarmLinkAction_Base& stbase() const;
  inline ::BVCU::AlarmLinkAction_Base* mutable_stbase();
  inline ::BVCU::AlarmLinkAction_Base* release_stbase();
  
  // optional .BVCU.PUConfig.WeekTimeSlice stWeek = 2;
  inline bool has_stweek() const;
  inline void clear_stweek();
  static const int kStWeekFieldNumber = 2;
  inline const ::BVCU::PUConfig::WeekTimeSlice& stweek() const;
  inline ::BVCU::PUConfig::WeekTimeSlice* mutable_stweek();
  inline ::BVCU::PUConfig::WeekTimeSlice* release_stweek();
  
  // repeated .BVCU.AlarmSource pSource = 3;
  inline int psource_size() const;
  inline void clear_psource();
  static const int kPSourceFieldNumber = 3;
  inline const ::BVCU::AlarmSource& psource(int index) const;
  inline ::BVCU::AlarmSource* mutable_psource(int index);
  inline ::BVCU::AlarmSource* add_psource();
  inline const ::google::protobuf::RepeatedPtrField< ::BVCU::AlarmSource >&
      psource() const;
  inline ::google::protobuf::RepeatedPtrField< ::BVCU::AlarmSource >*
      mutable_psource();
  
  // optional uint32 iSourceInterval = 4;
  inline bool has_isourceinterval() const;
  inline void clear_isourceinterval();
  static const int kISourceIntervalFieldNumber = 4;
  inline ::google::protobuf::uint32 isourceinterval() const;
  inline void set_isourceinterval(::google::protobuf::uint32 value);
  
  // repeated .BVCU.AlarmAction pAction = 5;
  inline int paction_size() const;
  inline void clear_paction();
  static const int kPActionFieldNumber = 5;
  inline const ::BVCU::AlarmAction& paction(int index) const;
  inline ::BVCU::AlarmAction* mutable_paction(int index);
  inline ::BVCU::AlarmAction* add_paction();
  inline const ::google::protobuf::RepeatedPtrField< ::BVCU::AlarmAction >&
      paction() const;
  inline ::google::protobuf::RepeatedPtrField< ::BVCU::AlarmAction >*
      mutable_paction();
  
  // @@protoc_insertion_point(class_scope:BVCU.AlarmLinkAction)
 private:
  inline void set_has_stbase();
  inline void clear_has_stbase();
  inline void set_has_stweek();
  inline void clear_has_stweek();
  inline void set_has_isourceinterval();
  inline void clear_has_isourceinterval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::BVCU::AlarmLinkAction_Base* stbase_;
  ::BVCU::PUConfig::WeekTimeSlice* stweek_;
  ::google::protobuf::RepeatedPtrField< ::BVCU::AlarmSource > psource_;
  ::google::protobuf::RepeatedPtrField< ::BVCU::AlarmAction > paction_;
  ::google::protobuf::uint32 isourceinterval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_BVAlarm_2eproto();
  friend void protobuf_AssignDesc_BVAlarm_2eproto();
  friend void protobuf_ShutdownFile_BVAlarm_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmLinkAction* default_instance_;
};
// ===================================================================


// ===================================================================

// AlarmSource

// optional uint32 iSource = 1;
inline bool AlarmSource::has_isource() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmSource::set_has_isource() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmSource::clear_has_isource() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmSource::clear_isource() {
  isource_ = 0u;
  clear_has_isource();
}
inline ::google::protobuf::uint32 AlarmSource::isource() const {
  return isource_;
}
inline void AlarmSource::set_isource(::google::protobuf::uint32 value) {
  set_has_isource();
  isource_ = value;
}

// optional uint32 iType = 2;
inline bool AlarmSource::has_itype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmSource::set_has_itype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmSource::clear_has_itype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmSource::clear_itype() {
  itype_ = 0u;
  clear_has_itype();
}
inline ::google::protobuf::uint32 AlarmSource::itype() const {
  return itype_;
}
inline void AlarmSource::set_itype(::google::protobuf::uint32 value) {
  set_has_itype();
  itype_ = value;
}

// optional uint32 iValue = 3;
inline bool AlarmSource::has_ivalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmSource::set_has_ivalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmSource::clear_has_ivalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmSource::clear_ivalue() {
  ivalue_ = 0u;
  clear_has_ivalue();
}
inline ::google::protobuf::uint32 AlarmSource::ivalue() const {
  return ivalue_;
}
inline void AlarmSource::set_ivalue(::google::protobuf::uint32 value) {
  set_has_ivalue();
  ivalue_ = value;
}

// -------------------------------------------------------------------

// AlarmContent

// optional .BVCU.AlarmSource stSource = 1;
inline bool AlarmContent::has_stsource() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmContent::set_has_stsource() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmContent::clear_has_stsource() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmContent::clear_stsource() {
  if (stsource_ != NULL) stsource_->::BVCU::AlarmSource::Clear();
  clear_has_stsource();
}
inline const ::BVCU::AlarmSource& AlarmContent::stsource() const {
  return stsource_ != NULL ? *stsource_ : *default_instance_->stsource_;
}
inline ::BVCU::AlarmSource* AlarmContent::mutable_stsource() {
  set_has_stsource();
  if (stsource_ == NULL) stsource_ = new ::BVCU::AlarmSource;
  return stsource_;
}
inline ::BVCU::AlarmSource* AlarmContent::release_stsource() {
  clear_has_stsource();
  ::BVCU::AlarmSource* temp = stsource_;
  stsource_ = NULL;
  return temp;
}

// optional .BVCU.PUConfig.WallTime stTime = 2;
inline bool AlarmContent::has_sttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmContent::set_has_sttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmContent::clear_has_sttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmContent::clear_sttime() {
  if (sttime_ != NULL) sttime_->::BVCU::PUConfig::WallTime::Clear();
  clear_has_sttime();
}
inline const ::BVCU::PUConfig::WallTime& AlarmContent::sttime() const {
  return sttime_ != NULL ? *sttime_ : *default_instance_->sttime_;
}
inline ::BVCU::PUConfig::WallTime* AlarmContent::mutable_sttime() {
  set_has_sttime();
  if (sttime_ == NULL) sttime_ = new ::BVCU::PUConfig::WallTime;
  return sttime_;
}
inline ::BVCU::PUConfig::WallTime* AlarmContent::release_sttime() {
  clear_has_sttime();
  ::BVCU::PUConfig::WallTime* temp = sttime_;
  sttime_ = NULL;
  return temp;
}

// optional bytes pContentData = 3;
inline bool AlarmContent::has_pcontentdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmContent::set_has_pcontentdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmContent::clear_has_pcontentdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmContent::clear_pcontentdata() {
  if (pcontentdata_ != &::google::protobuf::internal::kEmptyString) {
    pcontentdata_->clear();
  }
  clear_has_pcontentdata();
}
inline const ::std::string& AlarmContent::pcontentdata() const {
  return *pcontentdata_;
}
inline void AlarmContent::set_pcontentdata(const ::std::string& value) {
  set_has_pcontentdata();
  if (pcontentdata_ == &::google::protobuf::internal::kEmptyString) {
    pcontentdata_ = new ::std::string;
  }
  pcontentdata_->assign(value);
}
inline void AlarmContent::set_pcontentdata(const char* value) {
  set_has_pcontentdata();
  if (pcontentdata_ == &::google::protobuf::internal::kEmptyString) {
    pcontentdata_ = new ::std::string;
  }
  pcontentdata_->assign(value);
}
inline void AlarmContent::set_pcontentdata(const void* value, size_t size) {
  set_has_pcontentdata();
  if (pcontentdata_ == &::google::protobuf::internal::kEmptyString) {
    pcontentdata_ = new ::std::string;
  }
  pcontentdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmContent::mutable_pcontentdata() {
  set_has_pcontentdata();
  if (pcontentdata_ == &::google::protobuf::internal::kEmptyString) {
    pcontentdata_ = new ::std::string;
  }
  return pcontentdata_;
}
inline ::std::string* AlarmContent::release_pcontentdata() {
  clear_has_pcontentdata();
  if (pcontentdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pcontentdata_;
    pcontentdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// AlarmAction_Record

// optional uint32 iIndex = 1;
inline bool AlarmAction_Record::has_iindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmAction_Record::set_has_iindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmAction_Record::clear_has_iindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmAction_Record::clear_iindex() {
  iindex_ = 0u;
  clear_has_iindex();
}
inline ::google::protobuf::uint32 AlarmAction_Record::iindex() const {
  return iindex_;
}
inline void AlarmAction_Record::set_iindex(::google::protobuf::uint32 value) {
  set_has_iindex();
  iindex_ = value;
}

// optional uint32 iPreRecord = 2;
inline bool AlarmAction_Record::has_iprerecord() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmAction_Record::set_has_iprerecord() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmAction_Record::clear_has_iprerecord() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmAction_Record::clear_iprerecord() {
  iprerecord_ = 0u;
  clear_has_iprerecord();
}
inline ::google::protobuf::uint32 AlarmAction_Record::iprerecord() const {
  return iprerecord_;
}
inline void AlarmAction_Record::set_iprerecord(::google::protobuf::uint32 value) {
  set_has_iprerecord();
  iprerecord_ = value;
}

// optional uint32 iPostRecord = 3;
inline bool AlarmAction_Record::has_ipostrecord() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmAction_Record::set_has_ipostrecord() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmAction_Record::clear_has_ipostrecord() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmAction_Record::clear_ipostrecord() {
  ipostrecord_ = 0u;
  clear_has_ipostrecord();
}
inline ::google::protobuf::uint32 AlarmAction_Record::ipostrecord() const {
  return ipostrecord_;
}
inline void AlarmAction_Record::set_ipostrecord(::google::protobuf::uint32 value) {
  set_has_ipostrecord();
  ipostrecord_ = value;
}

// -------------------------------------------------------------------

// AlarmAction_AlertOut

// optional uint32 iIndex = 1;
inline bool AlarmAction_AlertOut::has_iindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmAction_AlertOut::set_has_iindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmAction_AlertOut::clear_has_iindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmAction_AlertOut::clear_iindex() {
  iindex_ = 0u;
  clear_has_iindex();
}
inline ::google::protobuf::uint32 AlarmAction_AlertOut::iindex() const {
  return iindex_;
}
inline void AlarmAction_AlertOut::set_iindex(::google::protobuf::uint32 value) {
  set_has_iindex();
  iindex_ = value;
}

// optional uint32 bAction = 2;
inline bool AlarmAction_AlertOut::has_baction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmAction_AlertOut::set_has_baction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmAction_AlertOut::clear_has_baction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmAction_AlertOut::clear_baction() {
  baction_ = 0u;
  clear_has_baction();
}
inline ::google::protobuf::uint32 AlarmAction_AlertOut::baction() const {
  return baction_;
}
inline void AlarmAction_AlertOut::set_baction(::google::protobuf::uint32 value) {
  set_has_baction();
  baction_ = value;
}

// -------------------------------------------------------------------

// AlarmAction_Email

// optional string szReceiverAddr = 1;
inline bool AlarmAction_Email::has_szreceiveraddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmAction_Email::set_has_szreceiveraddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmAction_Email::clear_has_szreceiveraddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmAction_Email::clear_szreceiveraddr() {
  if (szreceiveraddr_ != &::google::protobuf::internal::kEmptyString) {
    szreceiveraddr_->clear();
  }
  clear_has_szreceiveraddr();
}
inline const ::std::string& AlarmAction_Email::szreceiveraddr() const {
  return *szreceiveraddr_;
}
inline void AlarmAction_Email::set_szreceiveraddr(const ::std::string& value) {
  set_has_szreceiveraddr();
  if (szreceiveraddr_ == &::google::protobuf::internal::kEmptyString) {
    szreceiveraddr_ = new ::std::string;
  }
  szreceiveraddr_->assign(value);
}
inline void AlarmAction_Email::set_szreceiveraddr(const char* value) {
  set_has_szreceiveraddr();
  if (szreceiveraddr_ == &::google::protobuf::internal::kEmptyString) {
    szreceiveraddr_ = new ::std::string;
  }
  szreceiveraddr_->assign(value);
}
inline void AlarmAction_Email::set_szreceiveraddr(const char* value, size_t size) {
  set_has_szreceiveraddr();
  if (szreceiveraddr_ == &::google::protobuf::internal::kEmptyString) {
    szreceiveraddr_ = new ::std::string;
  }
  szreceiveraddr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmAction_Email::mutable_szreceiveraddr() {
  set_has_szreceiveraddr();
  if (szreceiveraddr_ == &::google::protobuf::internal::kEmptyString) {
    szreceiveraddr_ = new ::std::string;
  }
  return szreceiveraddr_;
}
inline ::std::string* AlarmAction_Email::release_szreceiveraddr() {
  clear_has_szreceiveraddr();
  if (szreceiveraddr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szreceiveraddr_;
    szreceiveraddr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string sCcAddr = 2;
inline bool AlarmAction_Email::has_sccaddr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmAction_Email::set_has_sccaddr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmAction_Email::clear_has_sccaddr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmAction_Email::clear_sccaddr() {
  if (sccaddr_ != &::google::protobuf::internal::kEmptyString) {
    sccaddr_->clear();
  }
  clear_has_sccaddr();
}
inline const ::std::string& AlarmAction_Email::sccaddr() const {
  return *sccaddr_;
}
inline void AlarmAction_Email::set_sccaddr(const ::std::string& value) {
  set_has_sccaddr();
  if (sccaddr_ == &::google::protobuf::internal::kEmptyString) {
    sccaddr_ = new ::std::string;
  }
  sccaddr_->assign(value);
}
inline void AlarmAction_Email::set_sccaddr(const char* value) {
  set_has_sccaddr();
  if (sccaddr_ == &::google::protobuf::internal::kEmptyString) {
    sccaddr_ = new ::std::string;
  }
  sccaddr_->assign(value);
}
inline void AlarmAction_Email::set_sccaddr(const char* value, size_t size) {
  set_has_sccaddr();
  if (sccaddr_ == &::google::protobuf::internal::kEmptyString) {
    sccaddr_ = new ::std::string;
  }
  sccaddr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmAction_Email::mutable_sccaddr() {
  set_has_sccaddr();
  if (sccaddr_ == &::google::protobuf::internal::kEmptyString) {
    sccaddr_ = new ::std::string;
  }
  return sccaddr_;
}
inline ::std::string* AlarmAction_Email::release_sccaddr() {
  clear_has_sccaddr();
  if (sccaddr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sccaddr_;
    sccaddr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string sBccAddr = 3;
inline bool AlarmAction_Email::has_sbccaddr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmAction_Email::set_has_sbccaddr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmAction_Email::clear_has_sbccaddr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmAction_Email::clear_sbccaddr() {
  if (sbccaddr_ != &::google::protobuf::internal::kEmptyString) {
    sbccaddr_->clear();
  }
  clear_has_sbccaddr();
}
inline const ::std::string& AlarmAction_Email::sbccaddr() const {
  return *sbccaddr_;
}
inline void AlarmAction_Email::set_sbccaddr(const ::std::string& value) {
  set_has_sbccaddr();
  if (sbccaddr_ == &::google::protobuf::internal::kEmptyString) {
    sbccaddr_ = new ::std::string;
  }
  sbccaddr_->assign(value);
}
inline void AlarmAction_Email::set_sbccaddr(const char* value) {
  set_has_sbccaddr();
  if (sbccaddr_ == &::google::protobuf::internal::kEmptyString) {
    sbccaddr_ = new ::std::string;
  }
  sbccaddr_->assign(value);
}
inline void AlarmAction_Email::set_sbccaddr(const char* value, size_t size) {
  set_has_sbccaddr();
  if (sbccaddr_ == &::google::protobuf::internal::kEmptyString) {
    sbccaddr_ = new ::std::string;
  }
  sbccaddr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmAction_Email::mutable_sbccaddr() {
  set_has_sbccaddr();
  if (sbccaddr_ == &::google::protobuf::internal::kEmptyString) {
    sbccaddr_ = new ::std::string;
  }
  return sbccaddr_;
}
inline ::std::string* AlarmAction_Email::release_sbccaddr() {
  clear_has_sbccaddr();
  if (sbccaddr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sbccaddr_;
    sbccaddr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string szTitle = 4;
inline bool AlarmAction_Email::has_sztitle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmAction_Email::set_has_sztitle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmAction_Email::clear_has_sztitle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmAction_Email::clear_sztitle() {
  if (sztitle_ != &::google::protobuf::internal::kEmptyString) {
    sztitle_->clear();
  }
  clear_has_sztitle();
}
inline const ::std::string& AlarmAction_Email::sztitle() const {
  return *sztitle_;
}
inline void AlarmAction_Email::set_sztitle(const ::std::string& value) {
  set_has_sztitle();
  if (sztitle_ == &::google::protobuf::internal::kEmptyString) {
    sztitle_ = new ::std::string;
  }
  sztitle_->assign(value);
}
inline void AlarmAction_Email::set_sztitle(const char* value) {
  set_has_sztitle();
  if (sztitle_ == &::google::protobuf::internal::kEmptyString) {
    sztitle_ = new ::std::string;
  }
  sztitle_->assign(value);
}
inline void AlarmAction_Email::set_sztitle(const char* value, size_t size) {
  set_has_sztitle();
  if (sztitle_ == &::google::protobuf::internal::kEmptyString) {
    sztitle_ = new ::std::string;
  }
  sztitle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmAction_Email::mutable_sztitle() {
  set_has_sztitle();
  if (sztitle_ == &::google::protobuf::internal::kEmptyString) {
    sztitle_ = new ::std::string;
  }
  return sztitle_;
}
inline ::std::string* AlarmAction_Email::release_sztitle() {
  clear_has_sztitle();
  if (sztitle_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sztitle_;
    sztitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// AlarmAction_Snapshot

// optional uint32 iIndex = 1;
inline bool AlarmAction_Snapshot::has_iindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmAction_Snapshot::set_has_iindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmAction_Snapshot::clear_has_iindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmAction_Snapshot::clear_iindex() {
  iindex_ = 0u;
  clear_has_iindex();
}
inline ::google::protobuf::uint32 AlarmAction_Snapshot::iindex() const {
  return iindex_;
}
inline void AlarmAction_Snapshot::set_iindex(::google::protobuf::uint32 value) {
  set_has_iindex();
  iindex_ = value;
}

// optional uint32 iDuration = 2;
inline bool AlarmAction_Snapshot::has_iduration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmAction_Snapshot::set_has_iduration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmAction_Snapshot::clear_has_iduration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmAction_Snapshot::clear_iduration() {
  iduration_ = 0u;
  clear_has_iduration();
}
inline ::google::protobuf::uint32 AlarmAction_Snapshot::iduration() const {
  return iduration_;
}
inline void AlarmAction_Snapshot::set_iduration(::google::protobuf::uint32 value) {
  set_has_iduration();
  iduration_ = value;
}

// optional uint32 bLocal = 3;
inline bool AlarmAction_Snapshot::has_blocal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmAction_Snapshot::set_has_blocal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmAction_Snapshot::clear_has_blocal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmAction_Snapshot::clear_blocal() {
  blocal_ = 0u;
  clear_has_blocal();
}
inline ::google::protobuf::uint32 AlarmAction_Snapshot::blocal() const {
  return blocal_;
}
inline void AlarmAction_Snapshot::set_blocal(::google::protobuf::uint32 value) {
  set_has_blocal();
  blocal_ = value;
}

// optional uint32 bUpload = 4;
inline bool AlarmAction_Snapshot::has_bupload() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmAction_Snapshot::set_has_bupload() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmAction_Snapshot::clear_has_bupload() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmAction_Snapshot::clear_bupload() {
  bupload_ = 0u;
  clear_has_bupload();
}
inline ::google::protobuf::uint32 AlarmAction_Snapshot::bupload() const {
  return bupload_;
}
inline void AlarmAction_Snapshot::set_bupload(::google::protobuf::uint32 value) {
  set_has_bupload();
  bupload_ = value;
}

// optional uint32 bEmail = 5;
inline bool AlarmAction_Snapshot::has_bemail() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmAction_Snapshot::set_has_bemail() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmAction_Snapshot::clear_has_bemail() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmAction_Snapshot::clear_bemail() {
  bemail_ = 0u;
  clear_has_bemail();
}
inline ::google::protobuf::uint32 AlarmAction_Snapshot::bemail() const {
  return bemail_;
}
inline void AlarmAction_Snapshot::set_bemail(::google::protobuf::uint32 value) {
  set_has_bemail();
  bemail_ = value;
}

// repeated string ppszNRUID = 6;
inline int AlarmAction_Snapshot::ppsznruid_size() const {
  return ppsznruid_.size();
}
inline void AlarmAction_Snapshot::clear_ppsznruid() {
  ppsznruid_.Clear();
}
inline const ::std::string& AlarmAction_Snapshot::ppsznruid(int index) const {
  return ppsznruid_.Get(index);
}
inline ::std::string* AlarmAction_Snapshot::mutable_ppsznruid(int index) {
  return ppsznruid_.Mutable(index);
}
inline void AlarmAction_Snapshot::set_ppsznruid(int index, const ::std::string& value) {
  ppsznruid_.Mutable(index)->assign(value);
}
inline void AlarmAction_Snapshot::set_ppsznruid(int index, const char* value) {
  ppsznruid_.Mutable(index)->assign(value);
}
inline void AlarmAction_Snapshot::set_ppsznruid(int index, const char* value, size_t size) {
  ppsznruid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmAction_Snapshot::add_ppsznruid() {
  return ppsznruid_.Add();
}
inline void AlarmAction_Snapshot::add_ppsznruid(const ::std::string& value) {
  ppsznruid_.Add()->assign(value);
}
inline void AlarmAction_Snapshot::add_ppsznruid(const char* value) {
  ppsznruid_.Add()->assign(value);
}
inline void AlarmAction_Snapshot::add_ppsznruid(const char* value, size_t size) {
  ppsznruid_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AlarmAction_Snapshot::ppsznruid() const {
  return ppsznruid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AlarmAction_Snapshot::mutable_ppsznruid() {
  return &ppsznruid_;
}

// optional .BVCU.AlarmAction_Email stEmail = 7;
inline bool AlarmAction_Snapshot::has_stemail() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AlarmAction_Snapshot::set_has_stemail() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AlarmAction_Snapshot::clear_has_stemail() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AlarmAction_Snapshot::clear_stemail() {
  if (stemail_ != NULL) stemail_->::BVCU::AlarmAction_Email::Clear();
  clear_has_stemail();
}
inline const ::BVCU::AlarmAction_Email& AlarmAction_Snapshot::stemail() const {
  return stemail_ != NULL ? *stemail_ : *default_instance_->stemail_;
}
inline ::BVCU::AlarmAction_Email* AlarmAction_Snapshot::mutable_stemail() {
  set_has_stemail();
  if (stemail_ == NULL) stemail_ = new ::BVCU::AlarmAction_Email;
  return stemail_;
}
inline ::BVCU::AlarmAction_Email* AlarmAction_Snapshot::release_stemail() {
  clear_has_stemail();
  ::BVCU::AlarmAction_Email* temp = stemail_;
  stemail_ = NULL;
  return temp;
}

// optional uint32 bAttach = 8;
inline bool AlarmAction_Snapshot::has_battach() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AlarmAction_Snapshot::set_has_battach() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AlarmAction_Snapshot::clear_has_battach() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AlarmAction_Snapshot::clear_battach() {
  battach_ = 0u;
  clear_has_battach();
}
inline ::google::protobuf::uint32 AlarmAction_Snapshot::battach() const {
  return battach_;
}
inline void AlarmAction_Snapshot::set_battach(::google::protobuf::uint32 value) {
  set_has_battach();
  battach_ = value;
}

// -------------------------------------------------------------------

// AlarmAction_SMS

// optional string szCardNum = 1;
inline bool AlarmAction_SMS::has_szcardnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmAction_SMS::set_has_szcardnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmAction_SMS::clear_has_szcardnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmAction_SMS::clear_szcardnum() {
  if (szcardnum_ != &::google::protobuf::internal::kEmptyString) {
    szcardnum_->clear();
  }
  clear_has_szcardnum();
}
inline const ::std::string& AlarmAction_SMS::szcardnum() const {
  return *szcardnum_;
}
inline void AlarmAction_SMS::set_szcardnum(const ::std::string& value) {
  set_has_szcardnum();
  if (szcardnum_ == &::google::protobuf::internal::kEmptyString) {
    szcardnum_ = new ::std::string;
  }
  szcardnum_->assign(value);
}
inline void AlarmAction_SMS::set_szcardnum(const char* value) {
  set_has_szcardnum();
  if (szcardnum_ == &::google::protobuf::internal::kEmptyString) {
    szcardnum_ = new ::std::string;
  }
  szcardnum_->assign(value);
}
inline void AlarmAction_SMS::set_szcardnum(const char* value, size_t size) {
  set_has_szcardnum();
  if (szcardnum_ == &::google::protobuf::internal::kEmptyString) {
    szcardnum_ = new ::std::string;
  }
  szcardnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmAction_SMS::mutable_szcardnum() {
  set_has_szcardnum();
  if (szcardnum_ == &::google::protobuf::internal::kEmptyString) {
    szcardnum_ = new ::std::string;
  }
  return szcardnum_;
}
inline ::std::string* AlarmAction_SMS::release_szcardnum() {
  clear_has_szcardnum();
  if (szcardnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szcardnum_;
    szcardnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// AlarmAction_PTZ

// optional uint32 iIndex = 1;
inline bool AlarmAction_PTZ::has_iindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmAction_PTZ::set_has_iindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmAction_PTZ::clear_has_iindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmAction_PTZ::clear_iindex() {
  iindex_ = 0u;
  clear_has_iindex();
}
inline ::google::protobuf::uint32 AlarmAction_PTZ::iindex() const {
  return iindex_;
}
inline void AlarmAction_PTZ::set_iindex(::google::protobuf::uint32 value) {
  set_has_iindex();
  iindex_ = value;
}

// optional uint32 iCommand = 2;
inline bool AlarmAction_PTZ::has_icommand() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmAction_PTZ::set_has_icommand() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmAction_PTZ::clear_has_icommand() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmAction_PTZ::clear_icommand() {
  icommand_ = 0u;
  clear_has_icommand();
}
inline ::google::protobuf::uint32 AlarmAction_PTZ::icommand() const {
  return icommand_;
}
inline void AlarmAction_PTZ::set_icommand(::google::protobuf::uint32 value) {
  set_has_icommand();
  icommand_ = value;
}

// optional uint32 iParam = 3;
inline bool AlarmAction_PTZ::has_iparam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmAction_PTZ::set_has_iparam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmAction_PTZ::clear_has_iparam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmAction_PTZ::clear_iparam() {
  iparam_ = 0u;
  clear_has_iparam();
}
inline ::google::protobuf::uint32 AlarmAction_PTZ::iparam() const {
  return iparam_;
}
inline void AlarmAction_PTZ::set_iparam(::google::protobuf::uint32 value) {
  set_has_iparam();
  iparam_ = value;
}

// -------------------------------------------------------------------

// AlarmAction_AudioOut

// optional uint32 iIndex = 1;
inline bool AlarmAction_AudioOut::has_iindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmAction_AudioOut::set_has_iindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmAction_AudioOut::clear_has_iindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmAction_AudioOut::clear_iindex() {
  iindex_ = 0u;
  clear_has_iindex();
}
inline ::google::protobuf::uint32 AlarmAction_AudioOut::iindex() const {
  return iindex_;
}
inline void AlarmAction_AudioOut::set_iindex(::google::protobuf::uint32 value) {
  set_has_iindex();
  iindex_ = value;
}

// -------------------------------------------------------------------

// AlarmAction

// optional uint32 iAction = 1;
inline bool AlarmAction::has_iaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmAction::set_has_iaction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmAction::clear_has_iaction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmAction::clear_iaction() {
  iaction_ = 0u;
  clear_has_iaction();
}
inline ::google::protobuf::uint32 AlarmAction::iaction() const {
  return iaction_;
}
inline void AlarmAction::set_iaction(::google::protobuf::uint32 value) {
  set_has_iaction();
  iaction_ = value;
}

// optional uint32 iCount = 2;
inline bool AlarmAction::has_icount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmAction::set_has_icount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmAction::clear_has_icount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmAction::clear_icount() {
  icount_ = 0u;
  clear_has_icount();
}
inline ::google::protobuf::uint32 AlarmAction::icount() const {
  return icount_;
}
inline void AlarmAction::set_icount(::google::protobuf::uint32 value) {
  set_has_icount();
  icount_ = value;
}

// optional uint32 iDelay = 3;
inline bool AlarmAction::has_idelay() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmAction::set_has_idelay() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmAction::clear_has_idelay() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmAction::clear_idelay() {
  idelay_ = 0u;
  clear_has_idelay();
}
inline ::google::protobuf::uint32 AlarmAction::idelay() const {
  return idelay_;
}
inline void AlarmAction::set_idelay(::google::protobuf::uint32 value) {
  set_has_idelay();
  idelay_ = value;
}

// optional uint32 iInterval = 4;
inline bool AlarmAction::has_iinterval() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmAction::set_has_iinterval() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmAction::clear_has_iinterval() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmAction::clear_iinterval() {
  iinterval_ = 0u;
  clear_has_iinterval();
}
inline ::google::protobuf::uint32 AlarmAction::iinterval() const {
  return iinterval_;
}
inline void AlarmAction::set_iinterval(::google::protobuf::uint32 value) {
  set_has_iinterval();
  iinterval_ = value;
}

// optional .BVCU.AlarmAction_Record stRecord = 5;
inline bool AlarmAction::has_strecord() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmAction::set_has_strecord() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmAction::clear_has_strecord() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmAction::clear_strecord() {
  if (strecord_ != NULL) strecord_->::BVCU::AlarmAction_Record::Clear();
  clear_has_strecord();
}
inline const ::BVCU::AlarmAction_Record& AlarmAction::strecord() const {
  return strecord_ != NULL ? *strecord_ : *default_instance_->strecord_;
}
inline ::BVCU::AlarmAction_Record* AlarmAction::mutable_strecord() {
  set_has_strecord();
  if (strecord_ == NULL) strecord_ = new ::BVCU::AlarmAction_Record;
  return strecord_;
}
inline ::BVCU::AlarmAction_Record* AlarmAction::release_strecord() {
  clear_has_strecord();
  ::BVCU::AlarmAction_Record* temp = strecord_;
  strecord_ = NULL;
  return temp;
}

// optional .BVCU.AlarmAction_AlertOut stAlertOut = 6;
inline bool AlarmAction::has_stalertout() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmAction::set_has_stalertout() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlarmAction::clear_has_stalertout() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlarmAction::clear_stalertout() {
  if (stalertout_ != NULL) stalertout_->::BVCU::AlarmAction_AlertOut::Clear();
  clear_has_stalertout();
}
inline const ::BVCU::AlarmAction_AlertOut& AlarmAction::stalertout() const {
  return stalertout_ != NULL ? *stalertout_ : *default_instance_->stalertout_;
}
inline ::BVCU::AlarmAction_AlertOut* AlarmAction::mutable_stalertout() {
  set_has_stalertout();
  if (stalertout_ == NULL) stalertout_ = new ::BVCU::AlarmAction_AlertOut;
  return stalertout_;
}
inline ::BVCU::AlarmAction_AlertOut* AlarmAction::release_stalertout() {
  clear_has_stalertout();
  ::BVCU::AlarmAction_AlertOut* temp = stalertout_;
  stalertout_ = NULL;
  return temp;
}

// optional .BVCU.AlarmAction_Snapshot stSnapshot = 7;
inline bool AlarmAction::has_stsnapshot() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AlarmAction::set_has_stsnapshot() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AlarmAction::clear_has_stsnapshot() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AlarmAction::clear_stsnapshot() {
  if (stsnapshot_ != NULL) stsnapshot_->::BVCU::AlarmAction_Snapshot::Clear();
  clear_has_stsnapshot();
}
inline const ::BVCU::AlarmAction_Snapshot& AlarmAction::stsnapshot() const {
  return stsnapshot_ != NULL ? *stsnapshot_ : *default_instance_->stsnapshot_;
}
inline ::BVCU::AlarmAction_Snapshot* AlarmAction::mutable_stsnapshot() {
  set_has_stsnapshot();
  if (stsnapshot_ == NULL) stsnapshot_ = new ::BVCU::AlarmAction_Snapshot;
  return stsnapshot_;
}
inline ::BVCU::AlarmAction_Snapshot* AlarmAction::release_stsnapshot() {
  clear_has_stsnapshot();
  ::BVCU::AlarmAction_Snapshot* temp = stsnapshot_;
  stsnapshot_ = NULL;
  return temp;
}

// optional .BVCU.AlarmAction_SMS stSMS = 8;
inline bool AlarmAction::has_stsms() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AlarmAction::set_has_stsms() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AlarmAction::clear_has_stsms() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AlarmAction::clear_stsms() {
  if (stsms_ != NULL) stsms_->::BVCU::AlarmAction_SMS::Clear();
  clear_has_stsms();
}
inline const ::BVCU::AlarmAction_SMS& AlarmAction::stsms() const {
  return stsms_ != NULL ? *stsms_ : *default_instance_->stsms_;
}
inline ::BVCU::AlarmAction_SMS* AlarmAction::mutable_stsms() {
  set_has_stsms();
  if (stsms_ == NULL) stsms_ = new ::BVCU::AlarmAction_SMS;
  return stsms_;
}
inline ::BVCU::AlarmAction_SMS* AlarmAction::release_stsms() {
  clear_has_stsms();
  ::BVCU::AlarmAction_SMS* temp = stsms_;
  stsms_ = NULL;
  return temp;
}

// optional .BVCU.AlarmAction_PTZ stPTZ = 9;
inline bool AlarmAction::has_stptz() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AlarmAction::set_has_stptz() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AlarmAction::clear_has_stptz() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AlarmAction::clear_stptz() {
  if (stptz_ != NULL) stptz_->::BVCU::AlarmAction_PTZ::Clear();
  clear_has_stptz();
}
inline const ::BVCU::AlarmAction_PTZ& AlarmAction::stptz() const {
  return stptz_ != NULL ? *stptz_ : *default_instance_->stptz_;
}
inline ::BVCU::AlarmAction_PTZ* AlarmAction::mutable_stptz() {
  set_has_stptz();
  if (stptz_ == NULL) stptz_ = new ::BVCU::AlarmAction_PTZ;
  return stptz_;
}
inline ::BVCU::AlarmAction_PTZ* AlarmAction::release_stptz() {
  clear_has_stptz();
  ::BVCU::AlarmAction_PTZ* temp = stptz_;
  stptz_ = NULL;
  return temp;
}

// optional .BVCU.AlarmAction_AudioOut stAudioOut = 10;
inline bool AlarmAction::has_staudioout() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AlarmAction::set_has_staudioout() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AlarmAction::clear_has_staudioout() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AlarmAction::clear_staudioout() {
  if (staudioout_ != NULL) staudioout_->::BVCU::AlarmAction_AudioOut::Clear();
  clear_has_staudioout();
}
inline const ::BVCU::AlarmAction_AudioOut& AlarmAction::staudioout() const {
  return staudioout_ != NULL ? *staudioout_ : *default_instance_->staudioout_;
}
inline ::BVCU::AlarmAction_AudioOut* AlarmAction::mutable_staudioout() {
  set_has_staudioout();
  if (staudioout_ == NULL) staudioout_ = new ::BVCU::AlarmAction_AudioOut;
  return staudioout_;
}
inline ::BVCU::AlarmAction_AudioOut* AlarmAction::release_staudioout() {
  clear_has_staudioout();
  ::BVCU::AlarmAction_AudioOut* temp = staudioout_;
  staudioout_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// AlarmLinkAction_Base

// optional string szName = 1;
inline bool AlarmLinkAction_Base::has_szname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmLinkAction_Base::set_has_szname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmLinkAction_Base::clear_has_szname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmLinkAction_Base::clear_szname() {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    szname_->clear();
  }
  clear_has_szname();
}
inline const ::std::string& AlarmLinkAction_Base::szname() const {
  return *szname_;
}
inline void AlarmLinkAction_Base::set_szname(const ::std::string& value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void AlarmLinkAction_Base::set_szname(const char* value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void AlarmLinkAction_Base::set_szname(const char* value, size_t size) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmLinkAction_Base::mutable_szname() {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  return szname_;
}
inline ::std::string* AlarmLinkAction_Base::release_szname() {
  clear_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szname_;
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 bEnable = 2;
inline bool AlarmLinkAction_Base::has_benable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmLinkAction_Base::set_has_benable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmLinkAction_Base::clear_has_benable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmLinkAction_Base::clear_benable() {
  benable_ = 0u;
  clear_has_benable();
}
inline ::google::protobuf::uint32 AlarmLinkAction_Base::benable() const {
  return benable_;
}
inline void AlarmLinkAction_Base::set_benable(::google::protobuf::uint32 value) {
  set_has_benable();
  benable_ = value;
}

// optional uint32 bInAction = 3;
inline bool AlarmLinkAction_Base::has_binaction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmLinkAction_Base::set_has_binaction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmLinkAction_Base::clear_has_binaction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmLinkAction_Base::clear_binaction() {
  binaction_ = 0u;
  clear_has_binaction();
}
inline ::google::protobuf::uint32 AlarmLinkAction_Base::binaction() const {
  return binaction_;
}
inline void AlarmLinkAction_Base::set_binaction(::google::protobuf::uint32 value) {
  set_has_binaction();
  binaction_ = value;
}

// optional .BVCU.PUConfig.WallTime stBegin = 4;
inline bool AlarmLinkAction_Base::has_stbegin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmLinkAction_Base::set_has_stbegin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmLinkAction_Base::clear_has_stbegin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmLinkAction_Base::clear_stbegin() {
  if (stbegin_ != NULL) stbegin_->::BVCU::PUConfig::WallTime::Clear();
  clear_has_stbegin();
}
inline const ::BVCU::PUConfig::WallTime& AlarmLinkAction_Base::stbegin() const {
  return stbegin_ != NULL ? *stbegin_ : *default_instance_->stbegin_;
}
inline ::BVCU::PUConfig::WallTime* AlarmLinkAction_Base::mutable_stbegin() {
  set_has_stbegin();
  if (stbegin_ == NULL) stbegin_ = new ::BVCU::PUConfig::WallTime;
  return stbegin_;
}
inline ::BVCU::PUConfig::WallTime* AlarmLinkAction_Base::release_stbegin() {
  clear_has_stbegin();
  ::BVCU::PUConfig::WallTime* temp = stbegin_;
  stbegin_ = NULL;
  return temp;
}

// optional .BVCU.PUConfig.WallTime stEnd = 5;
inline bool AlarmLinkAction_Base::has_stend() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmLinkAction_Base::set_has_stend() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmLinkAction_Base::clear_has_stend() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmLinkAction_Base::clear_stend() {
  if (stend_ != NULL) stend_->::BVCU::PUConfig::WallTime::Clear();
  clear_has_stend();
}
inline const ::BVCU::PUConfig::WallTime& AlarmLinkAction_Base::stend() const {
  return stend_ != NULL ? *stend_ : *default_instance_->stend_;
}
inline ::BVCU::PUConfig::WallTime* AlarmLinkAction_Base::mutable_stend() {
  set_has_stend();
  if (stend_ == NULL) stend_ = new ::BVCU::PUConfig::WallTime;
  return stend_;
}
inline ::BVCU::PUConfig::WallTime* AlarmLinkAction_Base::release_stend() {
  clear_has_stend();
  ::BVCU::PUConfig::WallTime* temp = stend_;
  stend_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// AlarmLinkAction

// optional .BVCU.AlarmLinkAction_Base stBase = 1;
inline bool AlarmLinkAction::has_stbase() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmLinkAction::set_has_stbase() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmLinkAction::clear_has_stbase() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmLinkAction::clear_stbase() {
  if (stbase_ != NULL) stbase_->::BVCU::AlarmLinkAction_Base::Clear();
  clear_has_stbase();
}
inline const ::BVCU::AlarmLinkAction_Base& AlarmLinkAction::stbase() const {
  return stbase_ != NULL ? *stbase_ : *default_instance_->stbase_;
}
inline ::BVCU::AlarmLinkAction_Base* AlarmLinkAction::mutable_stbase() {
  set_has_stbase();
  if (stbase_ == NULL) stbase_ = new ::BVCU::AlarmLinkAction_Base;
  return stbase_;
}
inline ::BVCU::AlarmLinkAction_Base* AlarmLinkAction::release_stbase() {
  clear_has_stbase();
  ::BVCU::AlarmLinkAction_Base* temp = stbase_;
  stbase_ = NULL;
  return temp;
}

// optional .BVCU.PUConfig.WeekTimeSlice stWeek = 2;
inline bool AlarmLinkAction::has_stweek() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmLinkAction::set_has_stweek() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmLinkAction::clear_has_stweek() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmLinkAction::clear_stweek() {
  if (stweek_ != NULL) stweek_->::BVCU::PUConfig::WeekTimeSlice::Clear();
  clear_has_stweek();
}
inline const ::BVCU::PUConfig::WeekTimeSlice& AlarmLinkAction::stweek() const {
  return stweek_ != NULL ? *stweek_ : *default_instance_->stweek_;
}
inline ::BVCU::PUConfig::WeekTimeSlice* AlarmLinkAction::mutable_stweek() {
  set_has_stweek();
  if (stweek_ == NULL) stweek_ = new ::BVCU::PUConfig::WeekTimeSlice;
  return stweek_;
}
inline ::BVCU::PUConfig::WeekTimeSlice* AlarmLinkAction::release_stweek() {
  clear_has_stweek();
  ::BVCU::PUConfig::WeekTimeSlice* temp = stweek_;
  stweek_ = NULL;
  return temp;
}

// repeated .BVCU.AlarmSource pSource = 3;
inline int AlarmLinkAction::psource_size() const {
  return psource_.size();
}
inline void AlarmLinkAction::clear_psource() {
  psource_.Clear();
}
inline const ::BVCU::AlarmSource& AlarmLinkAction::psource(int index) const {
  return psource_.Get(index);
}
inline ::BVCU::AlarmSource* AlarmLinkAction::mutable_psource(int index) {
  return psource_.Mutable(index);
}
inline ::BVCU::AlarmSource* AlarmLinkAction::add_psource() {
  return psource_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BVCU::AlarmSource >&
AlarmLinkAction::psource() const {
  return psource_;
}
inline ::google::protobuf::RepeatedPtrField< ::BVCU::AlarmSource >*
AlarmLinkAction::mutable_psource() {
  return &psource_;
}

// optional uint32 iSourceInterval = 4;
inline bool AlarmLinkAction::has_isourceinterval() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmLinkAction::set_has_isourceinterval() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmLinkAction::clear_has_isourceinterval() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmLinkAction::clear_isourceinterval() {
  isourceinterval_ = 0u;
  clear_has_isourceinterval();
}
inline ::google::protobuf::uint32 AlarmLinkAction::isourceinterval() const {
  return isourceinterval_;
}
inline void AlarmLinkAction::set_isourceinterval(::google::protobuf::uint32 value) {
  set_has_isourceinterval();
  isourceinterval_ = value;
}

// repeated .BVCU.AlarmAction pAction = 5;
inline int AlarmLinkAction::paction_size() const {
  return paction_.size();
}
inline void AlarmLinkAction::clear_paction() {
  paction_.Clear();
}
inline const ::BVCU::AlarmAction& AlarmLinkAction::paction(int index) const {
  return paction_.Get(index);
}
inline ::BVCU::AlarmAction* AlarmLinkAction::mutable_paction(int index) {
  return paction_.Mutable(index);
}
inline ::BVCU::AlarmAction* AlarmLinkAction::add_paction() {
  return paction_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BVCU::AlarmAction >&
AlarmLinkAction::paction() const {
  return paction_;
}
inline ::google::protobuf::RepeatedPtrField< ::BVCU::AlarmAction >*
AlarmLinkAction::mutable_paction() {
  return &paction_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace BVCU

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BVAlarm_2eproto__INCLUDED
