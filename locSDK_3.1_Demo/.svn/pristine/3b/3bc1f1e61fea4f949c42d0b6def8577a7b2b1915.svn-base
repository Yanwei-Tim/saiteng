package com.baidu.locTest;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;

import com.baidu.location.BDLocation;
import com.baidu.location.BDLocationListener;
import com.baidu.location.LocationClient;
import com.baidu.location.LocationClientOption;


import android.app.Activity;
import android.app.Service;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.location.LocationManager;
import android.os.Bundle;
import android.os.Process;
import android.os.Vibrator;
import android.provider.Settings;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;

public class mainActivity extends Activity {
	private TextView mTv = null;
	private Button   mStartBtn;

	private boolean  mIsStart;
	private LocationClient mLocClient;

	public static String TAG = "LocTestDemo";

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.main);	
		mTv = (TextView)findViewById(R.id.textview);
		mStartBtn = (Button)findViewById(R.id.StartBtn);
		mIsStart = false;
		mLocClient =new LocationClient( this );
		mLocClient.registerLocationListener( new MyLocationListenner());	
		setLocationOption();
		//开始/停止按钮 
		mStartBtn.setOnClickListener( new OnClickListener() {
			@Override
			public void onClick(View v) {
				if (!mIsStart) {
					setLocationOption();
					mLocClient.start();
					mStartBtn.setText("停止");
					mIsStart = true;

				} else {
					mLocClient.stop();
					mIsStart = false;
					mStartBtn.setText("开始");
				} 
				Log.d(TAG, "... mStartBtn onClick... pid="+Process.myPid());
			}
		});
		
	}   

	@Override
	public void onDestroy() {
		mLocClient.stop();
		super.onDestroy();
	}

	//设置相关参数
	private void setLocationOption(){
		LocationClientOption option = new LocationClientOption();
		option.setOpenGps(true);				//设置是否打开gps，使用gps前提是用户硬件打开gps。默认是不打开gps的。
		option.setCoorType("bd09ll");		//设置坐标类型
		option.setServiceName("com.baidu.location.service_v2.9");
		option.setPoiExtraInfo(true);//设置是否需要POI的电话地址等详细信息
		option.setPoiNumber(10);
		option.setAddrType("all");//	设置是否要返回地址信息，默认为无地址信息。String 值为 all时，表示返回地址信息。其他值都表示不返回地址信息。
		option.setScanSpan(3000);	//设置定位模式，小于1秒则一次定位;大于等于1秒则定时定位
		option.setPriority(LocationClientOption.NetWorkFirst);      //设置网络优先,/不设置，默认是gps优先
		option.disableCache(true);		
		mLocClient.setLocOption(option);
	}
	/**
	 * 监听函数，又新位置的时候，格式化成字符串，输出到屏幕中
	 */
	public class MyLocationListenner implements BDLocationListener {
		@Override
		public void onReceiveLocation(BDLocation location) {
			if (location == null)
				return ;
			StringBuffer sb = new StringBuffer(256);
			sb.append("time : ");
			sb.append(location.getTime());
			sb.append("\nerror code : ");
			sb.append(location.getLocType());
			sb.append("\nlatitude : ");
			sb.append(location.getLatitude());
			sb.append("\nlontitude : ");
			sb.append(location.getLongitude());
			sb.append("\nradius : ");
			sb.append(location.getRadius());
			if (location.getLocType() == BDLocation.TypeGpsLocation){
				sb.append("\nspeed : ");
				sb.append(location.getSpeed());
				sb.append("\nsatellite : ");
				sb.append(location.getSatelliteNumber());
			} else if (location.getLocType() == BDLocation.TypeNetWorkLocation){
				sb.append("\n省：");
				sb.append(location.getProvince());
				sb.append("\n市：");
				sb.append(location.getCity());
				sb.append("\n区/县：");
				sb.append(location.getDistrict());
				sb.append("\naddr : ");
				sb.append(location.getAddrStr());
			}
			sb.append("\nsdk version : ");
			sb.append(mLocClient.getVersion());
			sb.append("\nisCellChangeFlag : ");
			sb.append(location.isCellChangeFlag());
			logMsg(sb.toString());
			Log.i(TAG, sb.toString());
			

		}

		@Override
		public void onReceivePoi(BDLocation arg0) {
			// TODO Auto-generated method stub
			
		}
		
	}
	/**
	 * 显示字符串
	 * @param str
	 */
	public void logMsg(String str) {
		try {
			mTv.setText(str);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	protected boolean isNumeric(String str) {   
		Pattern pattern = Pattern.compile("[0-9]*");   
		return pattern.matcher(str).matches();   
	}  
	/**
	 * 检查GPS是否开启
	 * @return
	 */
	public boolean isGPSEnabled(){
		LocationManager locationManager = (LocationManager)this.getSystemService(Context.LOCATION_SERVICE);  
		return locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER); 
	}
	/**
	 * 打开gps设置界面
	 */
	public void openGPSSetting(){
		Intent intent = new Intent();  
        intent.setAction(Settings.ACTION_LOCATION_SOURCE_SETTINGS);  
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);  
        try   
        {  
            this.startActivity(intent);  
        } catch(ActivityNotFoundException ex)   
        {  
              
            // The Android SDK doc says that the location settings activity  
            // may not be found. In that case show the general settings.  
              
            // General settings activity  
            intent.setAction(Settings.ACTION_SETTINGS);  
            try {  
                this.startActivity(intent);  
            } catch (Exception e) {  
            }  
        }  
	}
}